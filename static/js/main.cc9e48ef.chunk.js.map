{"version":3,"sources":["Actions/ActionsTypes.tsx","Reducer/Reducer.tsx","Store/Provider.tsx","Actions/Actions.tsx","components/Counter.tsx","components/Card/newCard.tsx","App.tsx","index.tsx"],"names":["ActionType","initialState","value","Reducer","state","action","type","INCREMENT","DECREMENT","payload","StateContext","createContext","Provider","children","useReducer","useStateValue","useContext","useSelector","selector","Error","useDispatch","dispatch","autoReDispatch","increment","number","a","Counter","className","id","onClick","Card","Count","useState","islocked","setLocked","useSpring","xyz","set","bind","useGesture","onDrag","down","offset","x","y","position","div","style","transform","interpolate","z","width","height","backgroundColor","App","ReactDOM","render","document","getElementById"],"mappings":"qKACYA,E,yDAAAA,K,sBAAAA,E,uBAAAA,M,KCEL,IAAMC,EAA0B,CACrCC,MAAQ,GAoBKC,MAhBf,SACEC,EACAC,GAGA,OAAQA,EAAOC,MACb,KAAKN,EAAWO,UAEhB,KAAKP,EAAWQ,UACd,OAAO,2BAAIJ,GAAX,IAAiBF,MAAMG,EAAOI,UAEhC,QACE,OAAOL,ICLAM,EAAeC,wBAA6B,IAE5CC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACtB,kBAACH,EAAaE,SAAd,CAAuBV,MAAOY,qBAAWX,EAASF,IAC/CY,IAIQE,EAAgB,kBAAMC,qBAAWN,IAEvC,SAASO,EAAeC,GAAuC,IAAD,EACnDH,IAATX,EAD4D,oBAEnE,IAAKA,EAAO,MAAM,IAAIe,MAAM,sBAC5B,OAAOD,EAASd,GAGX,SAASgB,IAAe,IAAD,EACFL,IADE,mBACrBX,EADqB,KACdiB,EADc,KAQ5B,OALA,SAASC,EAAejB,GACtB,IAAKgB,EAAU,MAAM,IAAIF,MAAM,yBACb,oBAAXd,EAAwBA,EAAOiB,EAAgBlB,GAASiB,EAAShB,I,2BCjCtEkB,EAAY,SAACC,GACjB,8CAAO,WAAOH,GAAP,SAAAI,EAAA,sDAELJ,EAAS,CACPf,KAAMN,EAAWO,UACjBE,QAASe,EAAS,IAJf,2CAAP,uDCwBaE,EAtBW,WACtB,IAAML,EAAWD,IACXlB,EAAQe,GAAY,qBAAEf,SAE5B,OACI,yBAAKyB,UAAU,WACX,uBAAGC,GAAG,iBAAN,kBAAsC1B,GACtC,2BACI,4BAAQ0B,GAAG,YAAYC,QAAS,kBAAKR,EAASE,EAAUrB,MAAxD,aAGA,4BAAQ0B,GAAG,YAAYC,QAAS,kBAAKR,GDJlCG,ECIqDtB,EDHtE,uCAAO,WAAOmB,GAAP,SAAAI,EAAA,sDAELJ,EAAS,CACPf,KAAMN,EAAWQ,UACjBC,QAASe,EAAS,IAJf,2CAAP,wDADgB,IAACA,ICIH,gB,qBCgDDM,MAxDf,WACE,IAAMT,EAAWD,IACXW,EAAQd,GAAY,qBAAEf,SAFd,EAGe8B,oBAAS,GAHxB,mBAGPC,EAHO,KAGEC,EAHF,OAIWC,aAA4B,iBAAO,CAAEC,IAAK,CAAC,EAAG,EAAE,OAJ3D,mBAILA,EAJK,KAILA,IAASC,EAJJ,KAMRC,EAAOC,YAAW,CAEtBC,OAAS,YAA4B,IAA1BC,EAAyB,EAAzBA,KAAyB,gBAApBC,OAAoB,GAAVC,EAAU,KAARC,EAAQ,KAClC,IAAIX,EAAS,CACX,IAAIY,EAAW,CAACF,EAAEC,EAAE,GAEjBC,EAAS,GADRJ,EACa,IAEA,EAEhBJ,EAAI,CAAED,IAAKS,QAMlB,OACE,kBAAC,IAASC,IAAV,eACAnB,UAAa,OAEboB,MAAO,CAELC,UAAWZ,EAAIa,aAAY,SAACN,EAAGC,EAAGM,GAAP,6BAA6BP,EAA7B,eAAqCC,EAArC,wBAAsDM,EAAtD,SAC3BC,MAAQ,IACRC,OAAS,MAEPd,KAEF,4BACES,MAAS,CACPK,OAAS,IACTD,MAAO,KAETtB,QAAW,kBAAMR,EAASE,EAAUQ,MALtC,aASA,4BACEgB,MAAS,CACPK,OAAS,GACTD,MAAQ,IACRE,gBAAkBpB,EAAW,MAAQ,SAEvCJ,QAAW,kBAAMK,GAAWD,KAN9B,aAQCF,ICzCQuB,MAbf,WACE,OACE,6BACG,kBAAC,EAAD,KACE,oCACC,kBAAC,EAAD,MACA,kBAAC,EAAD,UCRVC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.cc9e48ef.chunk.js","sourcesContent":["\r\nexport enum ActionType {\r\n  INCREMENT = 'INCREMENT',\r\n  DECREMENT ='DECREMENT',\r\n}\r\n\r\n\r\nexport interface IIncrement {\r\n  type: ActionType.INCREMENT;\r\n  payload: number;\r\n}\r\n\r\nexport interface IDecrement {\r\n  type: ActionType.DECREMENT;\r\n  payload: number;\r\n}\r\n\r\n\r\nexport type Actions =\r\n  | IIncrement\r\n  | IDecrement\r\n","import { ActionType, Actions } from '../Actions/ActionsTypes';\r\nimport { IAppState} from '../Store/IAppState';\r\n\r\nexport const initialState: IAppState = {\r\n  value : 0\r\n};\r\n\r\n// eslint-disable-next-line complexity\r\nfunction Reducer(\r\n  state: IAppState,\r\n  action: Actions\r\n  ) {\r\n\r\n  switch (action.type) {\r\n    case ActionType.INCREMENT:\r\n      return {...state, value : action.payload};\r\n    case ActionType.DECREMENT:\r\n      return {...state,value:action.payload};\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default Reducer;\r\n","import  React,{ createContext, useContext, useReducer, Dispatch } from 'react';\r\nimport { Actions } from '../Actions/ActionsTypes';\r\nimport { IAppState } from './IAppState';\r\nimport Reducer, { initialState } from '../Reducer/Reducer';\r\nimport { Action } from 'redux';\r\n\r\ninterface ICreateReducer { children: JSX.Element }\r\n\r\nexport type IContextProps = [IAppState?, Dispatch<Actions>?]\r\n\r\nexport type IDispatcher = (\r\n  dispatch: Dispatch<Action>,\r\n  state: IAppState\r\n) => void\r\n\r\nexport const StateContext = createContext<IContextProps>([]);\r\n\r\nexport const Provider = ({ children }: ICreateReducer): JSX.Element => (\r\n  <StateContext.Provider value={useReducer(Reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n)\r\n\r\nexport const useStateValue = () => useContext(StateContext)\r\n\r\nexport function useSelector<T>(selector: (state: IAppState) => T): T {\r\n  const [state] = useStateValue()\r\n  if (!state) throw new Error('State is Undefined')\r\n  return selector(state)\r\n}\r\n\r\nexport function useDispatch() {\r\n  const [state, dispatch] = useStateValue()\r\n\r\n  function autoReDispatch(action : Function) {\r\n    if (!dispatch) throw new Error('dispatch is Undefined')\r\n    typeof action === 'function' ? action(autoReDispatch, state) : dispatch(action);\r\n  }\r\n\r\n  return autoReDispatch\r\n}","import { ActionType } from './ActionsTypes';\r\n\r\n\r\nconst increment = (number : number) =>{\r\n  return async (dispatch : Function) => {\r\n\r\n    dispatch({\r\n      type: ActionType.INCREMENT,\r\n      payload: number + 1\r\n    });\r\n  };\r\n\r\n}\r\nconst decrement = (number : number) =>{\r\n  return async (dispatch : Function)  => {\r\n\r\n    dispatch({\r\n      type: ActionType.DECREMENT,\r\n      payload: number - 1\r\n    });\r\n  };\r\n\r\n}\r\n\r\nexport { \r\n  increment,\r\n  decrement\r\n}\r\n","import React from 'react';\r\nimport { useDispatch ,useSelector } from '../Store/Provider';\r\nimport { increment, decrement } from '../Actions/Actions';\r\n\r\n\r\n\r\nconst Counter: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const value = useSelector(({value})=> value );\r\n    \r\n    return(\r\n        <div className=\"counter\">\r\n            <p id=\"counter-value\">Current value: {value}</p>\r\n            <p>\r\n                <button id=\"increment\" onClick={()=> dispatch(increment(value))}>\r\n                    Increment\r\n                </button>\r\n                <button id=\"decrement\" onClick={()=> dispatch(decrement(value))}>\r\n                    Decrement\r\n                </button>\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n    \r\n\r\n\r\n\r\nexport default Counter;\r\n","import React, { useState } from 'react'\r\nimport { useSpring, animated } from 'react-spring'\r\nimport { useGesture } from 'react-use-gesture'\r\nimport './styles.css'\r\nimport { useSelector, useDispatch } from '../../Store/Provider'\r\nimport { increment } from '../../Actions/Actions'\r\n\r\n\r\n\r\nfunction Card() {\r\n  const dispatch = useDispatch();\r\n  const Count = useSelector(({value})=> value) \r\n  const [islocked,setLocked] = useState(false);\r\n  const [{ xyz  } , set] = useSpring<{xyz : number[]}>(() => ({ xyz: [0, 0,1] }))\r\n  \r\n  const bind = useGesture({\r\n\r\n    onDrag : ({down,offset : [x,y]}) => {\r\n      if(!islocked){\r\n        let position = [x,y,1]\r\n         if(down){\r\n           position[2] = 1.1;\r\n         }else{\r\n           position[2] = 1;\r\n         }\r\n         set({ xyz: position })\r\n      }\r\n    }\r\n  })\r\n  \r\n \r\n  return (\r\n    <animated.div\r\n    className = {'card'}\r\n    \r\n    style={{\r\n      //@ts-ignore\r\n      transform: xyz.interpolate((x, y, z) => ` translate3d(${x}px, ${y}px, 0) scale(${z}) `),\r\n      width : 200 ,\r\n      height : 200\r\n    }}\r\n    {...bind()}\r\n    >\r\n      <button\r\n        style = {{\r\n          height : 100,\r\n          width :200\r\n        }}\r\n        onClick = {() => dispatch(increment(Count))}\r\n      >\r\n        Increment\r\n      </button>\r\n      <button\r\n        style = {{\r\n          height : 50,\r\n          width : 200,\r\n          backgroundColor : islocked ? 'red' : 'green'\r\n        }}\r\n        onClick = {() => setLocked(!islocked)}\r\n      >setLocked</button>\r\n      {Count}\r\n    </animated.div>\r\n  )\r\n}\r\n\r\nexport default Card ;\r\n","import React from 'react';\nimport { Provider } from './Store/Provider';\nimport Counter from './components/Counter';\nimport Card from './components/Card/newCard';\n\n\nfunction App () {\n  return (\n    <div >\n       <Provider>\n         <>\n          <Counter/>\n          <Card/>\n         </>\n      </Provider>\n    </div>\n  );\n}\n\nexport default App;\n","import  React from 'react';\r\nimport  ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root') as HTMLElement\r\n);\r\n\r\n\r\n\r\n"],"sourceRoot":""}